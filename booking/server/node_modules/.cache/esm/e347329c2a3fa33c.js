let express,readdirSync,cors,mongoose,Console;_2a3‍.w("express",[["default",["express"],function(v){express=v}]]);_2a3‍.w("fs",[["readdirSync",["readdirSync"],function(v){readdirSync=v}]]);_2a3‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_2a3‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_2a3‍.w("console",[["Console",["Console"],function(v){Console=v}]]);





const morgan = require ("morgan")
require("dotenv").config();

const app = express();

mongoose
    .connect(process.env.DATABASE, {
        useNewUrlParser: true,
        useFindAndModify: false,
        useUnifiedTopology: true,
        useCreateIndex: true,
    })
    .then(() => console.log("DB Connected"))
    .catch((err) => _2a3‍.g.console.log("DB Connection Error: ",err));
// middlewares
app.use(cors());
app.use(morgan("dev"));
app.use(express.json());

// route middleware
readdirSync("./routes").map((r) => 
    app.use("/api",require(`./routes/${r}`))
);


const port = process.env.PORT || 8000;
app.listen(port, () => console.log(`server is running on port ${port}`));